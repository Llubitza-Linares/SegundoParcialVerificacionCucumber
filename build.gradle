
plugins {
    // Apply the java-library plugin to add support for Java Library
id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    testImplementation 'io.rest-assured:rest-assured:4.5.1'
    implementation 'io.rest-assured:json-path:4.5.1'
    implementation 'io.rest-assured:json-schema-validator:4.5.1'
    implementation 'io.rest-assured:rest-assured-common:4.5.1'
    implementation 'io.rest-assured:rest-assured-all:4.5.1'
    implementation 'org.json:json:20211205'

    //cucumber
    implementation 'io.cucumber:cucumber-java:7.2.3'
    testImplementation 'io.cucumber:cucumber-junit:7.2.3'
}

test {
    useJUnitPlatform()
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'runner', 'src/test/resources']
        }
    }
}